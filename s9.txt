q1
#include<stdio.h>
int frame[5][2],nf;
int searchFrames(int sv)
{
int x;
for(x=0;x<nf;x++)
{
if(sv==frame[x][0])
{
return 0;
}
}
return 1;
}
void displayMemory()
{
int i;
printf("\n\nFrame Contains |");
for(i=0;i<nf;i++)
printf(" %d | ",frame[i][0]);
}
    int findFreeFrame()
{
int i,min=frame[0][1],ri=0;
for(i=0;i<nf;i++)
{
if(frame[i][1]==-1)
{
return i;
}
}
//LRU
for(i=0;i<nf;i++)
{
if(min>frame[i][1])
{
min=frame[i][1];
ri=i;
}
}
return ri;
}
main()
{
int rs[]={3, 4, 5, 6, 3, 4, 7, 3, 4, 5, 6, 7, 2, 4, 6};
int ts=0;
int n=15,i,j,pf=0,srch,insert_index;
printf("Enter how many frames");
scanf("%d",&nf);
for(i=0;i<nf;i++)
{
for(j=0;j<2;j++)
frame[i][j]=-1;
}
displayMemory();
for(i=0;i<n;i++)
{
srch=searchFrames(rs[i]);
if(srch==1)
{
pf++;
insert_index=findFreeFrame();
frame[insert_index][0]=rs[i];
frame[insert_index][1]=ts++;
}
displayMemory();
}
printf("\n\nTotal Page Faults Occured is %d\n",pf);
    }

q2
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>
#include<string.h>
#include<sys/wait.h>
#include<fcntl.h> // open,read(),close() : file related function
void search(char *token2,char *fname,char*token4)
{
char s[80],buffer[40];
int i=0,cnt=0,lc=1,fp;
fp=open(fname,O_RDONLY);
if(fp==-1)
{
printf("\nfile not found");
return;
}
while(read(fp,buffer,1)) //file found
{
if(buffer[0]=='\n')
lc++;
if( buffer[0]=='\n' || buffer[0]=='\t' || buffer[0]==' ' )//word found in line
{
s[i]='\0';
i=0;
if(strstr(s,token4))//pattern found
{
if(strcmp(token2,"f")==0)
{
printf("pattern \"%s\" found in \"%s\" at line no:%d\n",token4,s,lc);
break;
}// F end
if(strcmp(token2,"c")==0)
{
cnt++;
}// C end
if(strcmp(token2,"a")==0)
{
printf("pattern \"%s\" found in \"%s\" at line no:%d\n",token4,s,lc);
}// A end
}//end pattern found
}//if word end
else //char found
{
s[i]=buffer[0];
i++;
}//char found else end
}// end while
if(strcmp(token2,"c")==0)
printf("\ntotal occurances=%d",cnt);
}//search end
int main()
{
char cmd[80],tok1[10],tok2[10],tok3[10],tok4[10];
int n;
while(1)
{
printf("\nMYSHELL $]");
fgets(cmd,80,stdin);
n=sscanf(cmd,"%s%s%s%s",tok1,tok2,tok3,tok4);
switch(n)
{
case 1:
if(fork()==0)
{
execlp(tok1,tok1,NULL);
}
wait(0);
break;
case 2 :
if(fork()==0)
{ execlp(tok1,tok1,tok2,NULL);
}
wait(0);
break;
case 3:
if(fork()==0)
{
execlp(tok1,tok1,tok2,tok3,NULL);
}
wait(0);
break;
case 4 :
if(strcmp(tok1,"search")==0)
{
search(tok2,tok3,tok4);
}
else
{
if(fork()==0)
{
execlp(tok1,tok1,tok2,tok3,tok4,NULL);
}
wait(0);
}
break;
}
}
}




q2
