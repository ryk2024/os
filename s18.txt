q1
// LRU
#include <stdio.h>

struct frame
{
    int pno;
    int counter;

} frames[5];

int ref_str[30];
int np, n, i, j, currtime;

int pagefound(int pno1)
{
    int i;

    for (i = 0; i < n; i++)

        if (frames[i].pno == pno1)
            return i;
    return -1;

} // page_found

int get_lru()
{
    int min = 0;

    for (i = 0; i < n; i++)

        if (frames[i].counter < frames[min].counter)
            min = i;
    return min;
}

int main()
{
    int i, j, pno1, p, page_fault = 0, flag, cnt = 0;
    ;
    float hr, mr;
    printf("\n Enter how many frames: ");
    scanf("%d", &n);
    printf("\n Enter  length of referencestring: ");
    scanf("%d", &np);
    int len = np;
    printf("\n Enter referencestring: ");
    for (i = 0; i < np; i++)
        scanf("%d", &ref_str[i]);

    for (i = 0; i < n; i++)
    {
        frames[i].pno = -1;
        frames[i].counter = -1;
    }
    printf("\n Page No.\tFrames\t\tPage Fault");
    printf("\n-------------------------------------------------");
    currtime = 1;
    for (p = 0; p < np; p++)
    {
        flag = 0;
        pno1 = ref_str[p];
        j = pagefound(pno1);
        if (j == -1)
        {
            page_fault++;

            j = get_lru();

            frames[j].pno = pno1;

            flag = 1;
        }
        frames[j].counter = currtime;
        currtime++;
        printf("\n%5d\t", pno1);
        for (i = 0; i < n; i++)
            printf("  %d ", frames[i]);

        if (flag == 1)
            printf("\t YES");
        else
        {
            printf("\t NO");
            cnt++;
        }
    }
    printf("\n--------------------------------------------------");

    printf("\nNo. of page fault: %d ", page_fault);
    printf("\nNo. of page Hits: %d ", cnt);
}


q2

#include <stdio.h>
int main()
{
    int n;
    printf("enter no. of process : ");
    scanf("%d", &n);
    int at[n], bt[n], tat[n], wt[n], temp[n + 1], avgwt = 0, avgtat = 0;
    printf("enter at : ");
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &at[i]);
    }
    printf("enter bt : ");
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &bt[i]);
    }
    for (int i = 0; i < n; i++)
    {
        for (int j = i + 1; j < n - i - 1; j++)
        {
            if (at[i] > at[j])
            {
                int temp = at[i];
                at[i] = at[j];
                at[j] = temp;
            }
        }
    }

    tat[0] = wt[0] = temp[0] = 0;
    for (int i = 1; i < n + 1; i++)
    {
        temp[i] = temp[i - 1] + bt[i - 1];
        wt[i] = temp[i] - at[i];
    }
    for (int i = 0; i < n; i++)
    {
        tat[i] = wt[i] + bt[i];
        avgwt += wt[i];
        avgtat += tat[i];
    }
    printf("\n");
    printf("\n\nGantt Chart");
    printf("\n------------\n");
    for (int i = 0; i < n; i++)
    {
        printf("| P%d \t", i);
    }
    printf("\n------------\n");
    for (int i = 0; i < n + 1; i++)
        printf("%d\t", temp[i]);
    printf("\n\n");
    printf("\nat\tbt\twt\ttat\n");
    for (int i = 0; i < n; i++)
    {
        printf("%d\t%d\t%d\t%d\n", at[i], bt[i], wt[i], tat[i]);
    }
    printf("avgtat = %d", avgtat);
    printf("avgwt = %d", avgwt);
    return 0;
}
